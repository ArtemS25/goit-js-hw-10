{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAiBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAatC,OAZgB,IAAIC,SAAQ,KAC1BC,YAAW,KACLJ,EAEFL,EAAAU,OAAOC,QAAQ,uBAAqBR,QAAiBC,OAGrDJ,EAAAU,OAAOE,QAAQ,sBAAoBT,QAAeC,MAAU,GAE7DA,EAAM,G,CA1BAS,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAeF,EAAMG,OAAOC,SAClC,IAAIhB,EAAQiB,OAAOH,EAAad,MAAMkB,OACtC,MAAMC,EAAOF,OAAOH,EAAaK,KAAKD,OAChCE,EAASH,OAAOH,EAAaM,OAAOF,OAC1C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCvB,EAAcuB,EAAGrB,GACjBA,GAASmB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFirmSubmit);\n\nfunction onFirmSubmit(event) {\n  event.preventDefault();\n  const formElements = event.target.elements;\n  let delay = Number(formElements.delay.value);\n  const step = Number(formElements.step.value);\n  const amount = Number(formElements.amount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise(() => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","setTimeout","Notify","success","failure","document","querySelector","addEventListener","event","preventDefault","formElements","target","elements","Number","value","step","amount","i"],"version":3,"file":"03-promises.3e1fd77a.js.map"}