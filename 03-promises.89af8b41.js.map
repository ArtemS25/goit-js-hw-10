{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAiBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAatC,OAZgB,IAAIC,SAAQ,WAC1BC,YAAW,WACLJ,EAEFL,EAAAU,OAAOC,QAAQ,uBAAwCC,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAG7DJ,EAAAU,OAAOG,QAAQ,sBAAqCD,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAE3DA,E,IA1BMU,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAKN,IAJA,IAAMC,EAAeF,EAAMG,OAAOC,SAC9BjB,EAAQkB,OAAOH,EAAaf,MAAMmB,OAChCC,EAAOF,OAAOH,EAAaK,KAAKD,OAChCE,EAASH,OAAOH,EAAaM,OAAOF,OACjCG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCxB,EAAcwB,EAAGtB,GACjBA,GAASoB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFirmSubmit);\n\nfunction onFirmSubmit(event) {\n  event.preventDefault();\n  const formElements = event.target.elements;\n  let delay = Number(formElements.delay.value);\n  const step = Number(formElements.step.value);\n  const amount = Number(formElements.amount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise(() => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","setTimeout","Notify","success","concat","failure","document","querySelector","addEventListener","event","preventDefault","formElements","target","elements","Number","value","step","amount","i"],"version":3,"file":"03-promises.89af8b41.js.map"}